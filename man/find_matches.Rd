% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/find_matches.R
\name{find_matches}
\alias{find_matches}
\title{Find primer-template matches}
\usage{
find_matches(pattern, subject, subject_index, max.mismatch, with.indels = TRUE)
}
\arguments{
\item{pattern}{A string consisting of the pattern (primer sequence) to look for.
IUPAC ambiguity codes are supported (e.g. "R" matches "A" and "G"). "I" are
not supported, replace them with "N" instead.}

\item{subject}{A DNAStringSet (Biostrings class) containing one or multiple
DNA sequences in which the pattern is searched.}

\item{subject_index}{An integer of the DNAString index within the DNAStringSet.}

\item{max.mismatch}{The maximum number of mismatching letters
(maximum edit distance) allowed as integer.}

\item{with.indels}{A boolean, if TRUE then indels are allowed.}
}
\value{
A tibble containing the information of the primer-template matches found.
}
\description{
Find primer-template matches
}
\examples{

# prepare pattern and subject
EV_fwd <- "GCTGCGYTGGCGGCC"

EV_sequences_fasta <- system.file("extdata", "Enterovirus_12059.fasta", package="ptmismatch")

EV_sequences <- Biostrings::readDNAStringSet(EV_sequences_fasta)

# search either just one specific sequence...
find_matches(pattern = EV_fwd, subject = EV_sequences, subject_index = 1,
             max.mismatch = 1, with.indels = FALSE)

# ...or all sequences within a fasta file

future::plan("future::multisession")
furrr::future_map_dfr(1:length(EV_sequences),
                      function(x) find_matches(pattern = EV_fwd,
                                               subject = EV_sequences,
                                               subject_index = x,
                                               max.mismatch = 1,
                                               with.indels = FALSE))
future::plan("future::sequential")

}
